{"name":"Pyspot","tagline":"an SDK for interacting with the Spotify web API","body":"### pyspot\r\n\r\npyspot is a Python SDK that interfaces with the Spotify RESTful Web API. Using pyspot is easy and only requires a `client_id` and `client_secret` which can be obtained from [Spotify Developer](https://developer.spotify.com).\r\n\r\n### Getting Started\r\n\r\npyspot can be configured using either a configuration file, setting environmental variables, or passing the `client_id` and `client_secret` as keyword arguments when instantiating the `Spotify` class.\r\n\r\n1. Using a configuration file\r\n\r\nTo configure pyspot using a configuration file, create a file `~/.pyspot` with the following format:\r\n\r\n    {\r\n        \"SPOTIFY_CLIENT_ID\": \"<YOUR_SPOTIFY_CLIENT_ID>\",\r\n        \"SPOTIFY_CLIENT_SECRET\": \"<YOUR_SPOTIFY_CLIENT_SECRET>\"\r\n    }\r\n\r\n2. Using environmental variables\r\n\r\nModify your shell profile (e.g. `~/.bashrc`) and export the following variables:\r\n\r\n    export SPOTIFY_CLIENT_ID=\"<YOUR_SPOTIFY_CLIENT_ID>\"\r\n    export SPOTIFY_CLIENT_SECRET=\"<YOUR_SPOTIFY_CLIENT_SECRET>\"\r\n\r\n3. Instantiating the `Spotify` class\r\n\r\n    spotify = Spotify(client_id=\"<YOUR_SPOTIFY_CLIENT_ID>\", client_secret=\"<YOUR_SPOTIFY_CLIENT_SECRET>\")\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}